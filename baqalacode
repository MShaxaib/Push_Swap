
// int calculate_cost(int src_idx, int target_idx, t_stack *src_stk, t_stack *target_stk) // , t_stack *dest_stk
// {
// 	int total_cost;
// 	double src_pos;
// 	double target_pos;
// 	int		src_weight;
// 	int		target_weight;

// 	src_weight = 0;
// 	target_weight = 0;
// 	total_cost = 0;
// 	t_node *itersrc = src_stk->head;

// 	while (itersrc != NULL && itersrc->weight >= 0)
// 	{
// 		printf("\nindex:   %d\nweight:  %d\ncontent: %d\n", itersrc->index, itersrc->weight, itersrc->content);
// 		itersrc = itersrc->previous;
// 	}

// 	src_pos = (float)src_idx / (float)(stk_length(src_stk));
// 	target_pos = (float)target_idx / (float)(stk_length(target_stk));
// 	if (src_idx != 0)
// 	{
// 		if (src_pos <= 0.5 )
// 			src_weight = src_idx;
// 		else if (src_pos > 0.5)
// 			src_weight = stk_length(src_stk) - src_idx;
// 	}

// 	if(target_idx != 0)
// 	{
// 		if (target_pos <= 0.5)
// 			target_weight = target_idx;
// 		else if (target_pos > 0.5)
// 			target_weight = stk_length(target_stk) - target_idx;
// 	}
// 	total_cost = src_weight + target_weight;
// 	return (total_cost);
// }